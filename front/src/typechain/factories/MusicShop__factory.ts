/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MusicShop, MusicShopInterface } from "../MusicShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AlbumBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "OrderDelivered",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "addAlbum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "albums",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderedAt",
        type: "uint256",
      },
      {
        internalType: "enum MusicShop.OrderStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516115fd3803806115fd833981810160405281019061003291906100dc565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b6114e5806101186000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610192578063925931fc146101bd578063a85c38ef146101e8578063d96a094a14610229578063ea5df05914610245576100ca565b806301ffc9a7146100d857806326987b60146101155780634b5e4108146101405780636526deb114610169576100ca565b366100ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c190610a80565b60405180910390fd5b3480156100d657600080fd5b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610b02565b610286565b60405161010c9190610b4a565b60405180910390f35b34801561012157600080fd5b5061012a6102f0565b6040516101379190610b7e565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190610bc5565b6102f6565b005b34801561017557600080fd5b50610190600480360381019061018b9190610c8d565b6104c0565b005b34801561019e57600080fd5b506101a7610647565b6040516101b49190610d56565b60405180910390f35b3480156101c957600080fd5b506101d261066d565b6040516101df9190610b7e565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190610bc5565b610673565b604051610220959493929190610df7565b60405180910390f35b610243600480360381019061023e9190610bc5565b6106e6565b005b34801561025157600080fd5b5061026c60048036038101906102679190610bc5565b61092f565b60405161027d959493929190610ec9565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60025481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037d90610f6f565b60405180910390fd5b60006001828154811061039c5761039b610f8f565b5b906000526020600020906005020190506001808111156103bf576103be610d80565b5b8160040160009054906101000a900460ff1660018111156103e3576103e2610d80565b5b03610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a9061100a565b60405180910390fd5b60018160040160006101000a81548160ff0219169083600181111561044b5761044a610d80565b5b02179055508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681600101547f5bb66d85e0b78294f5d62dcc373c22e3d67e643b319cba2fba58c8180008220b60405160405180910390a35050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610f6f565b60405180910390fd5b60006040518060a00160405280600254815260200187815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001838152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020190816106119190611265565b50606082015181600301556080820151816004015550506002600081548092919061063b90611366565b91905055505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6001818154811061068357600080fd5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60008082815481106106fb576106fa610f8f565b5b9060005260206000209060050201905080600301543414610751576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610748906113fa565b60405180910390fd5b6000816004015411610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611466565b60405180910390fd5b8060040160008154809291906107ad90611486565b919050555060016040518060a001604052806003548152602001836001015481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016000600181111561080757610806610d80565b5b8152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff021916908360018111156108c3576108c2610d80565b5b02179055505050600360008154809291906108dd90611366565b9190505550423373ffffffffffffffffffffffffffffffffffffffff1682600101547f428114751c1b5d2334d5f2464a79219ffc3a15d4a23042756994f6337fdccc1760405160405180910390a45050565b6000818154811061093f57600080fd5b906000526020600020906005020160009150905080600001549080600101549080600201805461096e90611088565b80601f016020809104026020016040519081016040528092919081815260200182805461099a90611088565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b5050505050908060030154908060040154905085565b600082825260208201905092915050565b7f506c656173652075736520746865206275792066756e6374696f6e20746f207060008201527f7572636861736520616c62756d73210000000000000000000000000000000000602082015250565b6000610a6a602f836109fd565b9150610a7582610a0e565b604082019050919050565b60006020820190508181036000830152610a9981610a5d565b9050919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610adf81610aaa565b8114610aea57600080fd5b50565b600081359050610afc81610ad6565b92915050565b600060208284031215610b1857610b17610aa0565b5b6000610b2684828501610aed565b91505092915050565b60008115159050919050565b610b4481610b2f565b82525050565b6000602082019050610b5f6000830184610b3b565b92915050565b6000819050919050565b610b7881610b65565b82525050565b6000602082019050610b936000830184610b6f565b92915050565b610ba281610b65565b8114610bad57600080fd5b50565b600081359050610bbf81610b99565b92915050565b600060208284031215610bdb57610bda610aa0565b5b6000610be984828501610bb0565b91505092915050565b6000819050919050565b610c0581610bf2565b8114610c1057600080fd5b50565b600081359050610c2281610bfc565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c4d57610c4c610c28565b5b8235905067ffffffffffffffff811115610c6a57610c69610c2d565b5b602083019150836001820283011115610c8657610c85610c32565b5b9250929050565b600080600080600060808688031215610ca957610ca8610aa0565b5b6000610cb788828901610c13565b955050602086013567ffffffffffffffff811115610cd857610cd7610aa5565b5b610ce488828901610c37565b94509450506040610cf788828901610bb0565b9250506060610d0888828901610bb0565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4082610d15565b9050919050565b610d5081610d35565b82525050565b6000602082019050610d6b6000830184610d47565b92915050565b610d7a81610bf2565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610dc057610dbf610d80565b5b50565b6000819050610dd182610daf565b919050565b6000610de182610dc3565b9050919050565b610df181610dd6565b82525050565b600060a082019050610e0c6000830188610b6f565b610e196020830187610d71565b610e266040830186610d47565b610e336060830185610b6f565b610e406080830184610de8565b9695505050505050565b600081519050919050565b60005b83811015610e73578082015181840152602081019050610e58565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9b82610e4a565b610ea581856109fd565b9350610eb5818560208601610e55565b610ebe81610e7f565b840191505092915050565b600060a082019050610ede6000830188610b6f565b610eeb6020830187610d71565b8181036040830152610efd8186610e90565b9050610f0c6060830185610b6f565b610f196080830184610b6f565b9695505050505050565b7f6e6f7420616e206f776e65722100000000000000000000000000000000000000600082015250565b6000610f59600d836109fd565b9150610f6482610f23565b602082019050919050565b60006020820190508181036000830152610f8881610f4c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420737461747573000000000000000000000000000000000000600082015250565b6000610ff4600e836109fd565b9150610fff82610fbe565b602082019050919050565b6000602082019050818103600083015261102381610fe7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110a057607f821691505b6020821081036110b3576110b2611059565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261111b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110de565b61112586836110de565b95508019841693508086168417925050509392505050565b6000819050919050565b600061116261115d61115884610b65565b61113d565b610b65565b9050919050565b6000819050919050565b61117c83611147565b61119061118882611169565b8484546110eb565b825550505050565b600090565b6111a5611198565b6111b0818484611173565b505050565b5b818110156111d4576111c960008261119d565b6001810190506111b6565b5050565b601f821115611219576111ea816110b9565b6111f3846110ce565b81016020851015611202578190505b61121661120e856110ce565b8301826111b5565b50505b505050565b600082821c905092915050565b600061123c6000198460080261121e565b1980831691505092915050565b6000611255838361122b565b9150826002028217905092915050565b61126e82610e4a565b67ffffffffffffffff8111156112875761128661102a565b5b6112918254611088565b61129c8282856111d8565b600060209050601f8311600181146112cf57600084156112bd578287015190505b6112c78582611249565b86555061132f565b601f1984166112dd866110b9565b60005b82811015611305578489015182556001820191506020850194506020810190506112e0565b86831015611322578489015161131e601f89168261122b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137182610b65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113a3576113a2611337565b5b600182019050919050565b7f696e76616c696420707269636500000000000000000000000000000000000000600082015250565b60006113e4600d836109fd565b91506113ef826113ae565b602082019050919050565b60006020820190508181036000830152611413816113d7565b9050919050565b7f6f7574206f662073746f636b0000000000000000000000000000000000000000600082015250565b6000611450600c836109fd565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b600061149182610b65565b9150600082036114a4576114a3611337565b5b60018203905091905056fea264697066735822122051d7a6b05b0ab502ef9f0b7032757f5d5d51ece5d78f16e6e90460988418160564736f6c634300081c0033";

type MusicShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MusicShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MusicShop__factory extends ContractFactory {
  constructor(...args: MusicShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      MusicShop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MusicShop__factory {
    return super.connect(runner) as MusicShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MusicShopInterface {
    return new Interface(_abi) as MusicShopInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MusicShop {
    return new Contract(address, _abi, runner) as unknown as MusicShop;
  }
}
